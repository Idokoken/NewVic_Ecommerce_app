{"ast":null,"code":"import { ADDITEM, DELETEITEM } from \"../actionType\"; // export const cartReducer = (state = [], action) => {\n//   const product = action.payload;\n//   switch (action.type) {\n//     case ADDITEM:\n//       // check if product already exist\n//       const exist = state.find((x) => x.id === product.id);\n//       if (exist) {\n//         return state.map((x) =>\n//           x.id === product.id ? { ...state, qty: x.qty + 1 } : x\n//         );\n//       } else {\n//         const product = action.payload;\n//         return [...state, { ...product, qty: 1 }];\n//       }\n//     case DELETEITEM:\n//       const exist1 = state.find((x) => x.id === product.id);\n//       if (exist1) {\n//         return state.filter((x) => x.id === exist1.id);\n//       } else {\n//         return state.map((x) =>\n//           x.id === product.id ? { ...state, qty: x.qty - 1 } : x\n//         );\n//       }\n//     default:\n//       return state;\n//   }\n// };\n\nexport const cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const product = action.payload;\n\n  switch (action.type) {\n    case ADDITEM:\n      // check if product already exist\n      const exist = state.find(x => x.id === product.id);\n\n      if (exist) {\n        return state.map(x => x.id === product.id ? { ...exist,\n          qty: exist.qty + 1\n        } : x);\n      } else {\n        const product = action.payload;\n        return [...state, { ...product,\n          qty: 1\n        }];\n      }\n\n    case DELETEITEM:\n      const exist1 = state.find(x => x.id === product.id);\n\n      if (exist1.qty === 1) {\n        return state.filter(x => x.id !== exist1.id);\n      } else {\n        return state.map(x => x.id === product.id ? { ...exist1,\n          qty: exist1.qty - 1\n        } : x);\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/Idokoken/Desktop/ict_exercise/projects/fullstack/ecommerceapp/appfrontend/src/redux/reducers/cartReducer.js"],"names":["ADDITEM","DELETEITEM","cartReducer","state","action","product","payload","type","exist","find","x","id","map","qty","exist1","filter"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,UAAlB,QAAoC,eAApC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,WAAW,GAAG,YAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;AACjD,QAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;;AACA,UAAQF,MAAM,CAACG,IAAf;AACE,SAAKP,OAAL;AACE;AACA,YAAMQ,KAAK,GAAGL,KAAK,CAACM,IAAN,CAAYC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASN,OAAO,CAACM,EAAnC,CAAd;;AACA,UAAIH,KAAJ,EAAW;AACT,eAAOL,KAAK,CAACS,GAAN,CAAWF,CAAD,IACfA,CAAC,CAACC,EAAF,KAASN,OAAO,CAACM,EAAjB,GAAsB,EAAE,GAAGH,KAAL;AAAYK,UAAAA,GAAG,EAAEL,KAAK,CAACK,GAAN,GAAY;AAA7B,SAAtB,GAAyDH,CADpD,CAAP;AAGD,OAJD,MAIO;AACL,cAAML,OAAO,GAAGD,MAAM,CAACE,OAAvB;AACA,eAAO,CAAC,GAAGH,KAAJ,EAAW,EAAE,GAAGE,OAAL;AAAcQ,UAAAA,GAAG,EAAE;AAAnB,SAAX,CAAP;AACD;;AAEH,SAAKZ,UAAL;AACE,YAAMa,MAAM,GAAGX,KAAK,CAACM,IAAN,CAAYC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASN,OAAO,CAACM,EAAnC,CAAf;;AACA,UAAIG,MAAM,CAACD,GAAP,KAAe,CAAnB,EAAsB;AACpB,eAAOV,KAAK,CAACY,MAAN,CAAcL,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASG,MAAM,CAACH,EAApC,CAAP;AACD,OAFD,MAEO;AACL,eAAOR,KAAK,CAACS,GAAN,CAAWF,CAAD,IACfA,CAAC,CAACC,EAAF,KAASN,OAAO,CAACM,EAAjB,GAAsB,EAAE,GAAGG,MAAL;AAAaD,UAAAA,GAAG,EAAEC,MAAM,CAACD,GAAP,GAAa;AAA/B,SAAtB,GAA2DH,CADtD,CAAP;AAGD;;AAEH;AACE,aAAOP,KAAP;AAxBJ;AA0BD,CA5BM","sourcesContent":["import { ADDITEM, DELETEITEM } from \"../actionType\";\r\n\r\n// export const cartReducer = (state = [], action) => {\r\n//   const product = action.payload;\r\n//   switch (action.type) {\r\n//     case ADDITEM:\r\n//       // check if product already exist\r\n//       const exist = state.find((x) => x.id === product.id);\r\n//       if (exist) {\r\n//         return state.map((x) =>\r\n//           x.id === product.id ? { ...state, qty: x.qty + 1 } : x\r\n//         );\r\n//       } else {\r\n//         const product = action.payload;\r\n//         return [...state, { ...product, qty: 1 }];\r\n//       }\r\n\r\n//     case DELETEITEM:\r\n//       const exist1 = state.find((x) => x.id === product.id);\r\n//       if (exist1) {\r\n//         return state.filter((x) => x.id === exist1.id);\r\n//       } else {\r\n//         return state.map((x) =>\r\n//           x.id === product.id ? { ...state, qty: x.qty - 1 } : x\r\n//         );\r\n//       }\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nexport const cartReducer = (state = [], action) => {\r\n  const product = action.payload;\r\n  switch (action.type) {\r\n    case ADDITEM:\r\n      // check if product already exist\r\n      const exist = state.find((x) => x.id === product.id);\r\n      if (exist) {\r\n        return state.map((x) =>\r\n          x.id === product.id ? { ...exist, qty: exist.qty + 1 } : x\r\n        );\r\n      } else {\r\n        const product = action.payload;\r\n        return [...state, { ...product, qty: 1 }];\r\n      }\r\n\r\n    case DELETEITEM:\r\n      const exist1 = state.find((x) => x.id === product.id);\r\n      if (exist1.qty === 1) {\r\n        return state.filter((x) => x.id !== exist1.id);\r\n      } else {\r\n        return state.map((x) =>\r\n          x.id === product.id ? { ...exist1, qty: exist1.qty - 1 } : x\r\n        );\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}